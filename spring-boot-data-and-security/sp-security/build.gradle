buildscript {
    repositories {
        repositories {
            mavenCentral()
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:3.1.3")
    }
}


allprojects {
    group = "com.sp.fc"
    version = "1.0.0"
}

subprojects {

    apply plugin: "java"
    apply plugin: "org.springframework.boot"  // 이곳에 직접 플러그인 ID를 사용
    apply plugin: "io.spring.dependency-management"
    apply plugin: "idea"

    repositories {
        mavenCentral()
    }

    configurations {
//        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
    }

    dependencies {
//        developmentOnly("org.springframework.boot:spring-boot-devtools:3.1.3")  // 버전 명시
        implementation "org.springframework.boot:spring-boot-starter-security:3.1.3"  // 버전 명시
        implementation 'com.fasterxml.jackson.core:jackson-annotations'

        compileOnly 'org.projectlombok:lombok'  // lombok에 대한 정확한 버전을 명시해야 할 수도 있습니다.
        testCompileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        testImplementation "org.springframework.boot:spring-boot-starter-test:3.1.3"  // 버전 명시
    }

    test {
        useJUnitPlatform()
    }

}

// 해당 프로젝트에는 book 의존성이 없기에 jar 로 빌드하도록 하는 것이다.
["comp", "web"].each {
    def subProjectDir = new File(projectDir, it)
    subProjectDir.eachDir {dir->
        def projectName = ":${it}-${dir.name}"
        project(projectName){
            bootJar.enabled(false)
            jar.enabled(true)
        }
    }
}
["server"].each {
    def subProjectDir = new File(projectDir, it)
    subProjectDir.eachDir {dir->
        def projectName = ":${it}-${dir.name}"
        project(projectName){

        }
    }
}

tasks.named('help').configure {
    enabled = false
}